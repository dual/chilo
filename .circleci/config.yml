version: 2.1
orbs:
    python: circleci/python@2.1.1
    sonarcloud: sonarsource/sonarcloud@2.0.0
commands:
    install-postman-cli:
        steps:
            - run: curl -o- "https://dl-cli.pstmn.io/install/linux64.sh" | sh
    postman-test-api:
        steps:
            - run: postman collection run tests/integration/chilo.postman_collection.json --environment tests/integration/chilo.postman_environment.json --bail failure --verbose
    setup-artifacts:
        steps:
            - run: mkdir ./coverage && mkdir ./coverage/lint && mkdir ./coverage/reports && mkdir ./coverage/pretty || exit 0
    setup-mock-unit-test-api:
        steps:
            - run: ln -s tests/mocks/settings/unit_test_api.py api.py
    setup-mock-integration-basic-api:
        steps:
            - run: ln -s tests/mocks/settings/integration_basic_api.py api.py
    setup-mock-integration-openapi-api:
        steps:
            - run: ln -s tests/mocks/settings/integration_openapi_api.py api.py
    run-api:
        steps:
            - run: 
                name: Run the api
                background: true
                command: pipenv run api
    sleep:
        steps:
            - run: sleep 3
    python-unit-test-report:
        steps:
            - run: pipenv run coverage
            - store_artifacts:
                path: ./coverage
            - store_test_results:
                path: ./coverage/reports
    pypi-setup:
        steps:
            - run: echo -e "[pypi]" >> ~/.pypirc
            - run: echo -e "username = __token__" >> ~/.pypirc
            - run: echo -e "password = $PYPI_TOKEN" >> ~/.pypirc
    pypi-deploy:
        steps:
            - run: python3 -m pip install --user --upgrade setuptools wheel
            - run: python3 setup.py sdist bdist_wheel
            - run: python3 -m pip install --user --upgrade twine
            - run: python3 -m twine upload dist/*
jobs:
    install-build:
        docker:
            - image: cimg/python:3.9
        steps:
            - checkout
            - python/install-packages:
                pkg-manager: pipenv
                args: '--dev'
            - persist_to_workspace:
                root: ~/project
                paths:
                    - ./*
    unit-test:
        docker:
            - image: cimg/python:3.9
        steps:
            - attach_workspace:
                at: ~/project
            - setup-artifacts
            - setup-mock-unit-test-api
            - python-unit-test-report
            - sonarcloud/scan
    integration-test-declarative:
        docker:
            - image: cimg/python:3.9
        steps:
            - attach_workspace:
                at: ~/project
            - install-postman-cli
            - setup-mock-integration-basic-api
            - run-api
            - sleep
            - postman-test-api
    integration-test-openapi:
        docker:
            - image: cimg/python:3.9
        steps:
            - attach_workspace:
                at: ~/project
            - install-postman-cli
            - setup-mock-integration-openapi-api
            - run-api
            - sleep
            - postman-test-api
    install-build-deploy:
        docker:
            - image: cimg/python:3.9
        steps:
            - checkout
            - python/install-packages:
                pkg-manager: pipenv
            - pypi-setup
            - pypi-deploy
workflows:
    install-build-deploy-workflow:
        jobs:
            - install-build-deploy:
                filters:
                    tags:
                        only: /.*/
                    branches:
                        ignore: /.*/
    install-build-test-workflow:
        jobs:
            - install-build
            - unit-test:
                context:
                    - sonarcloud
                requires:
                    - install-build
            - integration-test-declarative:
                requires:
                    - install-build
            - integration-test-openapi:
                requires:
                    - install-build
